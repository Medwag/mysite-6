// backend/payfastUrl.jsw
import wixUsersBackend from 'wix-users-backend';
import { getPayFastConfig, getPayFastPaymentUrl } from 'backend/payfast-config.jsw';
import { generatePayFastSignature, createPayFastSignupParams, customEncode } from 'backend/payfastUtils.jsw';

export async function generatePayFastUrl(userId, amount = 149.00) {
  const config = await getPayFastConfig();
  const { passphrase } = config.getCredentials();

  // Resolve email
  let email = `user_${userId}@emergitag.me`;
  try {
    const u = await wixUsersBackend.getUser(userId);
    email = u?.loginEmail || email;
  } catch (_) {}

  const params = await createPayFastSignupParams(userId, email, amount);
  params.signature = await generatePayFastSignature(params, passphrase);

  const baseUrl = await getPayFastPaymentUrl();
  const query = Object.keys(params).sort().map(k => `${k}=${customEncode(params[k])}`).join('&');
  return `${baseUrl}?${query}`;
}

/**
 * Generate PayFast URL for a recurring subscription payment.
 * @param {string} userId
 * @param {string} planName
 * @param {number} amount
 * @param {'monthly'|'annual'} billingCycle
 */
export async function generatePayFastSubscriptionUrl(userId, planName, amount, billingCycle = 'monthly') {
  const config = await getPayFastConfig();
  const { merchantId, merchantKey, passphrase } = config.getCredentials();

  // Resolve email
  let email = `user_${userId}@emergitag.me`;
  try {
    const u = await wixUsersBackend.getUser(userId);
    email = u?.loginEmail || email;
  } catch (_) {}

  const frequency = billingCycle === 'annual' ? '6' : '3'; // PayFast: 3=Monthly, 6=Annual
  const tomorrow = new Date(Date.now() + 86400000).toISOString().split('T')[0];

  const params = {
    merchant_id: merchantId,
    merchant_key: merchantKey,
    amount: Number(amount).toFixed(2),
    item_name: `EmergiTag ${planName} Plan`,
    item_description: `Recurring ${planName} subscription for EmergiTag`,
    subscription_type: '1',
    billing_date: tomorrow,
    recurring_amount: Number(amount).toFixed(2),
    frequency,
    cycles: '0',
    email_address: email,
    email_confirmation: 1,
    confirmation_address: email,
    return_url: 'https://www.emergitag.me/subscription-success',
    cancel_url: 'https://www.emergitag.me/subscription-cancelled',
    notify_url: 'https://www.emergitag.me/_functions/payfast-itn',
    m_payment_id: `EMERGI_PF_SUB_${planName.toUpperCase()}_${userId}_${Date.now()}`,
    custom_str1: userId,
    custom_str2: planName,
    custom_str3: billingCycle,
    custom_str4: 'subscription',
    custom_str5: new Date().toISOString(),
  };

  params.signature = await generatePayFastSignature(params, passphrase);

  const baseUrl = await getPayFastPaymentUrl();
  const query = Object.keys(params).sort().map(k => `${k}=${customEncode(params[k])}`).join('&');
  return `${baseUrl}?${query}`;
}
